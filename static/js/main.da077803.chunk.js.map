{"version":3,"sources":["components/Tabs/helper.js","components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["findCurent","tabs","selectedTabId","find","id","isTabSelected","currentTab","tab","Tabs","onTabSelected","className","map","cn","onClick","onTabClick","href","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"uNAAO,SAASA,EAAWC,EAAMC,GAC/B,OAAOD,EAAKE,MAAK,qBAAGC,KAAgBF,MAAkBD,EAAK,G,WCEvDI,EAAgB,SAACC,EAAYC,GAAb,OAAqBD,EAAWF,KAAOG,EAAIH,IAEpDI,EAAO,SAAC,GAA4C,IAA1CP,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,cAAeO,EAAoB,EAApBA,cACpCH,EAAaN,EAAWC,EAAMC,GAQpC,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKQ,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAAAJ,GAAG,OACX,oBACEG,UAAWE,IAAG,CAAE,aAAcP,EAAcC,EAAYC,KACxD,UAAQ,MAFV,SAKE,mBACEM,QAAS,kBAjBJ,SAACN,GACdA,EAAIH,KAAOF,GACbO,EAAcF,GAeWO,CAAWP,IAC1BQ,KAAI,WAAMR,EAAIH,IACd,UAAQ,UAHV,SAKGG,EAAIS,SAPFT,EAAIH,WAcjB,qBAAKM,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAWW,cC9BPhB,EAAO,CAClB,CAAEG,GAAI,QAASY,MAAO,QAASC,QAAS,eACxC,CAAEb,GAAI,QAASY,MAAO,QAASC,QAAS,eACxC,CAAEb,GAAI,QAASY,MAAO,QAASC,QAAS,gBAG7BC,EAAM,WACjB,MAA0CC,mBAASlB,EAAK,GAAGG,IAA3D,mBAAOF,EAAP,KAAsBkB,EAAtB,KAEMd,EAAaN,EAAWC,EAAMC,GAEpC,OACE,sBAAKQ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBJ,EAAWU,SAEjC,cAAC,EAAD,CACEd,cAAeA,EACfO,cAVoB,SAAC,GAAD,IAAGL,EAAH,EAAGA,GAAH,OAAYgB,EAAiBhB,IAWjDH,KAAMA,QCvBdoB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.da077803.chunk.js","sourcesContent":["export function findCurent(tabs, selectedTabId) {\n  return tabs.find(({ id }) => id === selectedTabId) || tabs[0];\n}\n","import cn from 'classnames';\nimport { findCurent } from './helper';\n\nconst isTabSelected = (currentTab, tab) => currentTab.id === tab.id;\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }) => {\n  const currentTab = findCurent(tabs, selectedTabId);\n\n  const onTabClick = (tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={cn({ ' is-active': isTabSelected(currentTab, tab) })}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                onClick={() => onTabClick(tab)}\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {currentTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { findCurent } from './components/Tabs/helper';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const handleTabSelected = ({ id }) => setSelectedTabId(id);\n  const currentTab = findCurent(tabs, selectedTabId);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${currentTab.title}`}\n      </h1>\n      <Tabs\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTabSelected}\n        tabs={tabs}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}